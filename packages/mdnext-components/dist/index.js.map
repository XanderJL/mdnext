{"version":3,"file":"index.js","sources":["../src/components/Code.js","../src/components/Image.js"],"sourcesContent":["import React from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/vsDark';\nimport { useClipboard } from '@chakra-ui/core';\nimport { Button } from '@chakra-ui/core';\n\nfunction CopyButton({ value }) {\n  const { onCopy, hasCopied } = useClipboard(value);\n  return (\n    <Button aria-label=\"Copy text\" role=\"button\" onClick={onCopy}>\n      {hasCopied ? 'Copied' : 'Copy'}\n    </Button>\n  );\n}\n\nexport default function Code({ children, className }) {\n  const language = className.replace(/language-/, '');\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={theme}\n      code={children.trim()}\n      language={language}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            overflow: 'scroll',\n            marginTop: 20,\n            marginBottom: 20,\n            padding: 16,\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n          <CopyButton value={children.trim()} />\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n","import React from 'react';\nimport { Image as ChakraImage } from '@chakra-ui/core';\nimport { useImage } from 'use-cloudinary';\n\nexport default function Image({\n  src,\n  cloudName,\n  publicId,\n  transforms,\n  width,\n  height,\n  lazy,\n  ...props\n}) {\n  const {\n    generateImageUrl,\n    blurredPlaceholderUrl,\n    ref,\n    supportsLazyLoading,\n    inView,\n  } = useImage(cloudName);\n\n  // Not using Cloudinary\n  if (!publicId) {\n    // Try to lazy load all images when { lazy === true }\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage src={src} loading=\"lazy\" width=\"100%\" {...props} />\n            ))}\n        </div>\n      );\n    } else {\n      // Otherwise, just use the Chakra image component\n      return <ChakraImage src={src} {...props} />;\n    }\n\n    // Or if you are using Cloudinary, it will move to here\n  } else {\n    // lazy load w/ a blurred placeholder of the image that's loading\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n            background: `no-repeat url(${blurredPlaceholderUrl(\n              publicId,\n              width,\n              height,\n            )})`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage\n                src={generateImageUrl({\n                  delivery: { publicId },\n                  transformation: { ...transforms }\n                })}\n                loading=\"lazy\"\n                width=\"100%\"\n                {...props}\n              />\n            ))}\n        </div>\n      );\n    } else {\n      // Just render the image\n      return <ChakraImage src={url} width=\"100%\" {...props} />;\n    }\n  }\n}\n"],"names":["CopyButton","value","useClipboard","onCopy","hasCopied","Button","Code","children","className","language","replace","Highlight","defaultProps","theme","trim","style","tokens","getLineProps","getTokenProps","overflow","marginTop","marginBottom","padding","map","line","i","key","token","Image","src","cloudName","publicId","transforms","width","height","lazy","props","useImage","generateImageUrl","blurredPlaceholderUrl","ref","supportsLazyLoading","inView","undefined","ChakraImage","background","delivery","transformation","url"],"mappings":"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"}