{"version":3,"file":"index.umd.js","sources":["../src/components/Code.js","../src/components/Image.js"],"sourcesContent":["import React from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/vsDark';\nimport { useClipboard } from '@chakra-ui/core';\nimport { Button } from '@chakra-ui/core';\n\nfunction CopyButton({ value }) {\n  const { onCopy, hasCopied } = useClipboard(value);\n  return (\n    <Button aria-label=\"Copy text\" role=\"button\" onClick={onCopy}>\n      {hasCopied ? 'Copied' : 'Copy'}\n    </Button>\n  );\n}\n\nexport default function Code({ children, className }) {\n  const language = className.replace(/language-/, '');\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={theme}\n      code={children.trim()}\n      language={language}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            overflow: 'scroll',\n            marginTop: 20,\n            marginBottom: 20,\n            padding: 16,\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n          <CopyButton value={children.trim()} />\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n","import React from 'react';\nimport { Image as ChakraImage } from '@chakra-ui/core';\nimport { useImage } from 'use-cloudinary';\n\nexport default function Image({\n  src,\n  cloudName,\n  publicId,\n  transforms,\n  width,\n  height,\n  lazy,\n  ...props\n}) {\n  const {\n    generateImageUrl,\n    blurredPlaceholderUrl,\n    ref,\n    supportsLazyLoading,\n    inView,\n  } = useImage(cloudName);\n\n  // Not using Cloudinary\n  if (!publicId) {\n    // Try to lazy load all images when { lazy === true }\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage src={src} loading=\"lazy\" width=\"100%\" {...props} />\n            ))}\n        </div>\n      );\n    } else {\n      // Otherwise, just use the Chakra image component\n      return <ChakraImage src={src} {...props} />;\n    }\n\n    // Or if you are using Cloudinary, it will move to here\n  } else {\n    // lazy load w/ a blurred placeholder of the image that's loading\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n            background: `no-repeat url(${blurredPlaceholderUrl(\n              publicId,\n              width,\n              height,\n            )})`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage\n                src={generateImageUrl({\n                  delivery: { publicId },\n                  transformation: { ...transforms }\n                })}\n                loading=\"lazy\"\n                width=\"100%\"\n                {...props}\n              />\n            ))}\n        </div>\n      );\n    } else {\n      // Just render the image\n      return <ChakraImage src={url} width=\"100%\" {...props} />;\n    }\n  }\n}\n"],"names":["CopyButton","value","useClipboard","onCopy","hasCopied","Button","Code","children","className","language","replace","Highlight","defaultProps","theme","trim","style","tokens","getLineProps","getTokenProps","overflow","marginTop","marginBottom","padding","map","line","i","key","token","Image","src","cloudName","publicId","transforms","width","height","lazy","props","useImage","generateImageUrl","blurredPlaceholderUrl","ref","supportsLazyLoading","inView","undefined","ChakraImage","background","delivery","transformation","url"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAMA,SAASA,UAAT,OAA+B;EAAA,MAATC,KAAS,QAATA,KAAS;;EAAA,sBACCC,iBAAY,CAACD,KAAD,CADb;EAAA,MACrBE,MADqB,iBACrBA,MADqB;EAAA,MACbC,SADa,iBACbA,SADa;;EAE7B,sBACE,oBAACC,WAAD;EAAQ,kBAAW,WAAnB;EAA+B,IAAA,IAAI,EAAC,QAApC;EAA6C,IAAA,OAAO,EAAEF;EAAtD,KACGC,SAAS,GAAG,QAAH,GAAc,MAD1B,CADF;EAKD;;EAEc,SAASE,IAAT,QAAuC;EAAA,MAAvBC,QAAuB,SAAvBA,QAAuB;EAAA,MAAbC,SAAa,SAAbA,SAAa;EACpD,MAAMC,QAAQ,GAAGD,SAAS,CAACE,OAAV,CAAkB,WAAlB,EAA+B,EAA/B,CAAjB;EACA,sBACE,oBAACC,kBAAD,eACMC,sBADN;EAEE,IAAA,KAAK,EAAEC,KAFT;EAGE,IAAA,IAAI,EAAEN,QAAQ,CAACO,IAAT,EAHR;EAIE,IAAA,QAAQ,EAAEL;EAJZ,MAMG;EAAA,QAAGD,SAAH,SAAGA,SAAH;EAAA,QAAcO,KAAd,SAAcA,KAAd;EAAA,QAAqBC,MAArB,SAAqBA,MAArB;EAAA,QAA6BC,YAA7B,SAA6BA,YAA7B;EAAA,QAA2CC,aAA3C,SAA2CA,aAA3C;EAAA,wBACC;EACE,MAAA,SAAS,EAAEV,SADb;EAEE,MAAA,KAAK,eACAO,KADA;EAEHI,QAAAA,QAAQ,EAAE,QAFP;EAGHC,QAAAA,SAAS,EAAE,EAHR;EAIHC,QAAAA,YAAY,EAAE,EAJX;EAKHC,QAAAA,OAAO,EAAE;EALN;EAFP,OAUGN,MAAM,CAACO,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;EAAA,0BACV;EAAK,QAAA,GAAG,EAAEA;EAAV,SAAiBR,YAAY,CAAC;EAAEO,QAAAA,IAAI,EAAJA,IAAF;EAAQE,QAAAA,GAAG,EAAED;EAAb,OAAD,CAA7B,GACGD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;EAAA,4BACR;EAAM,UAAA,GAAG,EAAEA;EAAX,WAAoBR,aAAa,CAAC;EAAES,UAAAA,KAAK,EAALA,KAAF;EAASD,UAAAA,GAAG,EAAHA;EAAT,SAAD,CAAjC,EADQ;EAAA,OAAT,CADH,CADU;EAAA,KAAX,CAVH,eAiBE,oBAAC,UAAD;EAAY,MAAA,KAAK,EAAEnB,QAAQ,CAACO,IAAT;EAAnB,MAjBF,CADD;EAAA,GANH,CADF;EA8BD;;EC3Cc,SAASc,KAAT,OASZ;EAAA,MARDC,GAQC,QARDA,GAQC;EAAA,MAPDC,SAOC,QAPDA,SAOC;EAAA,MANDC,QAMC,QANDA,QAMC;EAAA,MALDC,UAKC,QALDA,UAKC;EAAA,MAJDC,KAIC,QAJDA,KAIC;EAAA,MAHDC,MAGC,QAHDA,MAGC;EAAA,MAFDC,IAEC,QAFDA,IAEC;EAAA,MADEC,KACF;;EAAA,kBAOGC,sBAAQ,CAACP,SAAD,CAPX;EAAA,MAECQ,gBAFD,aAECA,gBAFD;EAAA,MAGCC,qBAHD,aAGCA,qBAHD;EAAA,MAICC,GAJD,aAICA,GAJD;EAAA,MAKCC,mBALD,aAKCA,mBALD;EAAA,MAMCC,MAND,aAMCA,MAND;;;EAUD,MAAI,CAACX,QAAL,EAAe;EACb;EACA,QAAII,IAAJ,EAAU;EACR,0BACE;EACE,QAAA,GAAG,EAAE,CAACM,mBAAD,GAAuBD,GAAvB,GAA6BG,SADpC;EAEE,QAAA,KAAK,EAAE;EACLV,UAAAA,KAAK,EAAKA,KAAL,OADA;EAELC,UAAAA,MAAM,EAAKA,MAAL;EAFD;EAFT,SAOGQ,MAAM,IACJD,mBAAmB,iBAClB,oBAACG,UAAD;EAAa,QAAA,GAAG,EAAEf,GAAlB;EAAuB,QAAA,OAAO,EAAC,MAA/B;EAAsC,QAAA,KAAK,EAAC;EAA5C,SAAuDO,KAAvD,EATN,CADF;EAcD,KAfD,MAeO;EACL;EACA,0BAAO,oBAACQ,UAAD;EAAa,QAAA,GAAG,EAAEf;EAAlB,SAA2BO,KAA3B,EAAP;EACD,KApBY;;EAuBd,GAvBD,MAuBO;EACL;EACA,QAAID,IAAJ,EAAU;EACR,0BACE;EACE,QAAA,GAAG,EAAE,CAACM,mBAAD,GAAuBD,GAAvB,GAA6BG,SADpC;EAEE,QAAA,KAAK,EAAE;EACLV,UAAAA,KAAK,EAAKA,KAAL,OADA;EAELC,UAAAA,MAAM,EAAKA,MAAL,OAFD;EAGLW,UAAAA,UAAU,qBAAmBN,qBAAqB,CAChDR,QADgD,EAEhDE,KAFgD,EAGhDC,MAHgD,CAAxC;EAHL;EAFT,SAYGQ,MAAM,IACJD,mBAAmB,iBAClB,oBAACG,UAAD;EACE,QAAA,GAAG,EAAEN,gBAAgB,CAAC;EACpBQ,UAAAA,QAAQ,EAAE;EAAEf,YAAAA,QAAQ,EAARA;EAAF,WADU;EAEpBgB,UAAAA,cAAc,eAAOf,UAAP;EAFM,SAAD,CADvB;EAKE,QAAA,OAAO,EAAC,MALV;EAME,QAAA,KAAK,EAAC;EANR,SAOMI,KAPN,EAdN,CADF;EA2BD,KA5BD,MA4BO;EACL;EACA,0BAAO,oBAACQ,UAAD;EAAa,QAAA,GAAG,EAAEI,GAAlB;EAAuB,QAAA,KAAK,EAAC;EAA7B,SAAwCZ,KAAxC,EAAP;EACD;EACF;EACF;;;;;;;;;"}