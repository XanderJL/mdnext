{"version":3,"file":"index.modern.js","sources":["../src/components/Code.js","../src/components/Image.js"],"sourcesContent":["import React from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/vsDark';\nimport { useClipboard } from '@chakra-ui/core';\nimport { Button } from '@chakra-ui/core';\n\nfunction CopyButton({ value }) {\n  const { onCopy, hasCopied } = useClipboard(value);\n  return (\n    <Button aria-label=\"Copy text\" role=\"button\" onClick={onCopy}>\n      {hasCopied ? 'Copied' : 'Copy'}\n    </Button>\n  );\n}\n\nexport default function Code({ children, className }) {\n  const language = className.replace(/language-/, '');\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={theme}\n      code={children.trim()}\n      language={language}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            overflow: 'scroll',\n            marginTop: 20,\n            marginBottom: 20,\n            padding: 16,\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n          <CopyButton value={children.trim()} />\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n","import React from 'react';\nimport { Image as ChakraImage } from '@chakra-ui/core';\nimport { useImage } from 'use-cloudinary';\n\nexport default function Image({\n  src,\n  cloudName,\n  publicId,\n  transforms,\n  width,\n  height,\n  lazy,\n  ...props\n}) {\n  const {\n    generateImageUrl,\n    blurredPlaceholderUrl,\n    ref,\n    supportsLazyLoading,\n    inView,\n  } = useImage(cloudName);\n\n  // Not using Cloudinary\n  if (!publicId) {\n    // Try to lazy load all images when { lazy === true }\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage src={src} loading=\"lazy\" width=\"100%\" {...props} />\n            ))}\n        </div>\n      );\n    } else {\n      // Otherwise, just use the Chakra image component\n      return <ChakraImage src={src} {...props} />;\n    }\n\n    // Or if you are using Cloudinary, it will move to here\n  } else {\n    // lazy load w/ a blurred placeholder of the image that's loading\n    if (lazy) {\n      return (\n        <div\n          ref={!supportsLazyLoading ? ref : undefined}\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n            background: `no-repeat url(${blurredPlaceholderUrl(\n              publicId,\n              width,\n              height,\n            )})`,\n          }}\n        >\n          {inView ||\n            (supportsLazyLoading && (\n              <ChakraImage\n                src={generateImageUrl({\n                  delivery: { publicId },\n                  transformation: { ...transforms }\n                })}\n                loading=\"lazy\"\n                width=\"100%\"\n                {...props}\n              />\n            ))}\n        </div>\n      );\n    } else {\n      // Just render the image\n      return <ChakraImage src={url} width=\"100%\" {...props} />;\n    }\n  }\n}\n"],"names":["CopyButton","value","onCopy","hasCopied","useClipboard","Code","children","className","language","replace","defaultProps","theme","trim","style","tokens","getLineProps","getTokenProps","overflow","marginTop","marginBottom","padding","map","line","i","key","token","Image","src","cloudName","publicId","transforms","width","height","lazy","props","generateImageUrl","blurredPlaceholderUrl","ref","supportsLazyLoading","inView","useImage","undefined","ChakraImage","background","delivery","transformation","url"],"mappings":"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"}